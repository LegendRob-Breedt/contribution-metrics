version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: contribution-metrics-db
    environment:
      POSTGRES_DB: contribution_metrics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - .dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: contribution-metrics-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: contribution-metrics-jaeger    
    ports:
      - "16686:16686" # Jaeger UI
      - "14268:14268" # Jaeger HTTP
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    environment:
      COLLECTOR_OTLP_ENABLED: true
      JAEGER_DISABLED: false
    command: 
      - "--collector.otlp.enabled=true"
      - "--collector.otlp.grpc.host-port=0.0.0.0:4317"
      - "--collector.otlp.http.host-port=0.0.0.0:4318"

  adminer:
    image: adminer:5.3.0
    container_name: contribution-metrics-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: contribution-metrics-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"

volumes:
  postgres_data:
  redis_data:
